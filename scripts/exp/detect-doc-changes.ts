/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import simpleGit from 'simple-git/promise';
import { spawn } from 'child-process-promise';
import { projectRoot } from '../utils';

const git = simpleGit(projectRoot);
/**
 * This function is meant to be run in CI to detect if the PR contains documentation changes.
 * If it does, assign tech writers to the PR automatically
 */
async function detectDocChange(baseSha: string, headSha: string) {
  // generate reference docs using the mergebase
  await git.checkout(baseSha);
  await spawn('yarn', [], { cwd: projectRoot, stdio: 'inherit' });
  await spawn('yarn', ['docgen:exp'], { cwd: projectRoot, stdio: 'inherit' });

  // generate reference docs using the head
  await git.checkout(headSha);
  await spawn('yarn', [], { cwd: projectRoot, stdio: 'inherit' });
  // stage the docs generated by mergebase, so we can use git diff to tell if head changes any docs.
  await git.add('*');
  await spawn('yarn', ['docgen:exp'], { cwd: projectRoot, stdio: 'inherit' });

  const diff = await git.diff();

  // assign tech writers if there are doc changes.
  if (!!diff) {
    console.log('doc changes detected. Assigning tech writers to PR');
  } else {
    console.log('no doc changes detected');
  }
}
// find merge base

// generate reference docs for the merge base

// generate reference docs for the current PR

// any changes?

const headSha = process.env.GITHUB_PULL_REQUEST_HEAD_SHA;
const mergeBaseSha = process.env.GITHUB_PULL_REQUEST_BASE_SHA;

if (!headSha || !mergeBaseSha) {
  console.log('No merge base or head found. Is it not a PR?');
  process.exit(1);
}

detectDocChange(mergeBaseSha, headSha);
